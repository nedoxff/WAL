//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from WALParser.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IWALParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class WALParserBaseListener : IWALParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] WALParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] WALParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] WALParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] WALParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] WALParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] WALParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallStatement([NotNull] WALParser.FunctionCallStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.functionCallStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallStatement([NotNull] WALParser.FunctionCallStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.functionDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclarationStatement([NotNull] WALParser.FunctionDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.functionDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclarationStatement([NotNull] WALParser.FunctionDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStatement([NotNull] WALParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.assignmentStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStatement([NotNull] WALParser.AssignmentStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] WALParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] WALParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] WALParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] WALParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfStatement([NotNull] WALParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.elseIfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfStatement([NotNull] WALParser.ElseIfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] WALParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] WALParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.timedBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimedBlockStatement([NotNull] WALParser.TimedBlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.timedBlockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimedBlockStatement([NotNull] WALParser.TimedBlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.unsafeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeStatement([NotNull] WALParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.unsafeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeStatement([NotNull] WALParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] WALParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] WALParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.constantDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantDeclarationStatement([NotNull] WALParser.ConstantDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.constantDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantDeclarationStatement([NotNull] WALParser.ConstantDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] WALParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] WALParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] WALParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] WALParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] WALParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] WALParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryBooleanExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryBooleanExpression([NotNull] WALParser.BinaryBooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryBooleanExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryBooleanExpression([NotNull] WALParser.BinaryBooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] WALParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] WALParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] WALParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] WALParser.NotExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryCompareExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryCompareExpression([NotNull] WALParser.BinaryCompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryCompareExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryCompareExpression([NotNull] WALParser.BinaryCompareExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryMultiplyExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryMultiplyExpression([NotNull] WALParser.BinaryMultiplyExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryMultiplyExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryMultiplyExpression([NotNull] WALParser.BinaryMultiplyExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryAddExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryAddExpression([NotNull] WALParser.UnaryAddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryAddExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryAddExpression([NotNull] WALParser.UnaryAddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryAddExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryAddExpression([NotNull] WALParser.BinaryAddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryAddExpression</c>
	/// labeled alternative in <see cref="WALParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryAddExpression([NotNull] WALParser.BinaryAddExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.multiplyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyOperators([NotNull] WALParser.MultiplyOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.multiplyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyOperators([NotNull] WALParser.MultiplyOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.addOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOperators([NotNull] WALParser.AddOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.addOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOperators([NotNull] WALParser.AddOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.compareOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOperators([NotNull] WALParser.CompareOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.compareOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOperators([NotNull] WALParser.CompareOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.booleanOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanOperators([NotNull] WALParser.BooleanOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.booleanOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanOperators([NotNull] WALParser.BooleanOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.assignmentOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperators([NotNull] WALParser.AssignmentOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.assignmentOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperators([NotNull] WALParser.AssignmentOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] WALParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] WALParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] WALParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] WALParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.timeBlockEvent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeBlockEvent([NotNull] WALParser.TimeBlockEventContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.timeBlockEvent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeBlockEvent([NotNull] WALParser.TimeBlockEventContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] WALParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] WALParser.CommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.unsafeBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeBlock([NotNull] WALParser.UnsafeBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.unsafeBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeBlock([NotNull] WALParser.UnsafeBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.genericBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericBlock([NotNull] WALParser.GenericBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.genericBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericBlock([NotNull] WALParser.GenericBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] WALParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] WALParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.functionArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArgumentList([NotNull] WALParser.FunctionArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.functionArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArgumentList([NotNull] WALParser.FunctionArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="WALParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArgument([NotNull] WALParser.FunctionArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="WALParser.functionArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArgument([NotNull] WALParser.FunctionArgumentContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
